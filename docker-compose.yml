version: "2"

services:
  postgres:
    image: postgres:10.0
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER:     aleph
      POSTGRES_PASSWORD: aleph
      POSTGRES_DATABASE: aleph

  elasticsearch:
    image: alephdata/aleph-elasticsearch:10
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
    ports:
      - "19200:9200"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  redis:
    image: redis:alpine
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  convert-document:
    image: alephdata/convert-document:1.4.0
    restart: on-failure
    tmpfs:
      - /tmp
      - /root/.config
    mem_limit: 2g
    expose:
      - 3000

  recognize-text:
    image: alephdata/recognize-text:1.2.0
    restart: on-failure
    mem_limit: 2g
    expose:
      - 50000
  
  ingest-file:
    image: alephdata/ingest-file:latest
    tmpfs: /tmp
    volumes:
      - archive-data:/data
    environment:
      ARCHIVE_TYPE: 'file'
      REDIS_URL: 'redis://redis:6379/0'
      BALKHASH_BACKEND: 'postgresql'
      BALKHASH_DATABASE_URI: 'postgresql://aleph:aleph@postgres/aleph'
      OCR_SERVICE: 'recognize-text:50000'
      UNOSERVICE_URL: 'http://convert-document:3000/convert'
    links:
      - postgres
      - redis
      - convert-document
      - recognize-text
    restart: on-failure
    env_file:
      - aleph.env

  worker:
    image: alephdata/aleph
    command: aleph worker
    restart: on-failure
    links:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "/:/host"
    environment:
      BALKHASH_BACKEND: 'postgresql'
      BALKHASH_DATABASE_URI: 'postgresql://aleph:aleph@postgres/aleph'
      ALEPH_DATABASE_URI: 'postgresql://aleph:aleph@postgres/aleph'
    env_file:
      - aleph.env
  
  shell:
    image: alephdata/aleph
    command: /bin/bash
    links:
      - postgres
      - elasticsearch
      - redis
      - ingest-file
      - worker
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
      - "./mappings:/aleph/mappings"
      - "/:/host"
    environment:
      BALKHASH_BACKEND: 'postgresql'
      BALKHASH_DATABASE_URI: 'postgresql://aleph:aleph@postgres/aleph'
      ALEPH_DATABASE_URI: 'postgresql://aleph:aleph@postgres/aleph'
    env_file:
      - aleph.env

  api:
    image: alephdata/aleph
    command: gunicorn -w 8 -b 0.0.0.0:8000 --log-level info --log-file /var/log/gunicorn.log aleph.manage:app
    expose:
      - 8000
    links:
      - postgres
      - elasticsearch
      - redis
      - worker
      - ingest-file
    tmpfs:
      - /tmp
    volumes:
      - archive-data:/data
    env_file:
      - aleph.env

  ui:
    image: alephdata/aleph-ui-production
    links:
      - api
    ports:
      - "8080:8080"

volumes:
  archive-data: {}
  postgres-data: {}
  rabbitmq-data: {}
  redis-data: {}
  elasticsearch-data: {}